basePath: /
definitions:
  model.Order:
    properties:
      account_id:
        type: integer
      backend_status:
        type: boolean
      check_status:
        type: boolean
      claimer:
        type: string
      comment:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      dead_line:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      frontend_status:
        type: boolean
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      operator:
        type: string
      org:
        type: string
      period_id:
        type: integer
      priority:
        type: string
      status:
        type: string
      time_cost:
        type: number
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  req.OrderReq:
    properties:
      period_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: renqiang@outlook.com
    name: Airren
  description: PLC manager on Cloud
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Echo IoT Cloud
  version: 0.0.1
paths:
  /task/{id}:
    get:
      consumes:
      - application/json
      description: Get details of task by id
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      summary: get task by id
      tags:
      - Order
  /task/create:
    post:
      consumes:
      - application/json
      description: create task
      parameters:
      - description: task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      summary: create task
      tags:
      - Order
  /task/list:
    post:
      consumes:
      - application/json
      description: query task
      parameters:
      - description: task req
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/req.OrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Order'
            type: array
      summary: query task
      tags:
      - Order
  /task/update:
    put:
      consumes:
      - application/json
      description: update task
      parameters:
      - description: task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Order'
      summary: update task
      tags:
      - Order
swagger: "2.0"
